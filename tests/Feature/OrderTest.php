<?php

namespace Tests\Feature;

use App\Models\Item;
use App\Models\Order;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class OrderTest extends TestCase
{
    use RefreshDatabase;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->order = Order::factory()
            ->has(Item::factory()->count(3),'items')
            ->create();
    }

    public function test_create_order_and_related_items()
    {
        $this->assertDatabaseHas('orders',['id'=>$this->order->id]);
        $this->assertDatabaseCount('items',3);
        $this->assertEquals(3,$this->order->items()->count());
        $this->assertInstanceOf(Item::class,$this->order->items->first());
    }

    public function test_item_belongs_to_a_order()
    {
        $items = $this->order->items;
        $this->assertEquals($this->order->id,$items[0]['order_id']);
    }

    public function test_check_route_for_the_data()
    {
        $this->get(route('order-route',['order'=>$this->order->id]))->assertOk();
    }

    public function test_update_of_order_is_completed_successfully()
    {
        $this->order->order_name="Updated Order name";
        $this->order->save();
        $items = $this->order->items;
        $response = $this->put(route('order-route-update',['order'=>$this->order->id]),$this->order->toArray())->assertOk();
        $response->assertJsonPath('id',$this->order->id);
        $response->assertJsonPath('order_name',$this->order->order_name);
        $response->assertJsonPath('items',$items->toArray());
    }
}
